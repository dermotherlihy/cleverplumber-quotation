// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.dermotherlihy.quotation.model;

import com.dermotherlihy.quotation.model.Comment;
import java.util.List;
import java.util.Random;
import org.springframework.stereotype.Component;

privileged aspect CommentDataOnDemand_Roo_DataOnDemand {
    
    declare @type: CommentDataOnDemand: @Component;
    
    private Random CommentDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<Comment> CommentDataOnDemand.data;
    
    public Comment CommentDataOnDemand.getNewTransientComment(int index) {
        com.dermotherlihy.quotation.model.Comment obj = new com.dermotherlihy.quotation.model.Comment();
        setQuote(obj, index);
        setText(obj, index);
        return obj;
    }
    
    public void CommentDataOnDemand.setQuote(Comment obj, int index) {
        com.dermotherlihy.quotation.model.Quote quote = null;
        obj.setQuote(quote);
    }
    
    public void CommentDataOnDemand.setText(Comment obj, int index) {
        java.lang.String text = "text_" + index;
        if (text.length() > 100) {
            text = text.substring(0, 100);
        }
        obj.setText(text);
    }
    
    public Comment CommentDataOnDemand.getSpecificComment(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        Comment obj = data.get(index);
        return Comment.findComment(obj.getId());
    }
    
    public Comment CommentDataOnDemand.getRandomComment() {
        init();
        Comment obj = data.get(rnd.nextInt(data.size()));
        return Comment.findComment(obj.getId());
    }
    
    public boolean CommentDataOnDemand.modifyComment(Comment obj) {
        return false;
    }
    
    public void CommentDataOnDemand.init() {
        data = com.dermotherlihy.quotation.model.Comment.findCommentEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'Comment' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<com.dermotherlihy.quotation.model.Comment>();
        for (int i = 0; i < 10; i++) {
            com.dermotherlihy.quotation.model.Comment obj = getNewTransientComment(i);
            obj.persist();
            obj.flush();
            data.add(obj);
        }
    }
    
}
